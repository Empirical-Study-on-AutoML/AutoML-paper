# -*- coding: utf-8 -*-
"""Feb9_shanon enthropy_reduced time.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-9n9Ko80WutCiTlJ_CyZTz144nuT1HIp
"""

from google.colab import drive
drive.mount('/content/drive')

import csv
import pandas as pd
import math
import time

path_input="/content/drive/MyDrive/PhD/Automate machine learning/presentations for the meetings/12th meeting/dataset/functions/"
path_output="/content/drive/MyDrive/PhD/Automate machine learning/presentations for the meetings/12th meeting/dataset/functions/"

data1 = pd.read_excel(path_input + 'combined_function_calls2.xlsx','combined_function_calls2')
data1.head()


data2 = pd.read_excel(path_input + 'combined_function_calls2.xlsx','labeling 1 to end automl tools')
data2.head()

function_calls_with_shanon_anthropy_file = open(path_output + 'function_calls_with_shanon_anthropy.csv', mode='w', newline='',encoding='utf-8')
function_calls_with_shanon_anthropy_file_writer = csv.writer(function_calls_with_shanon_anthropy_file, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
function_calls_with_shanon_anthropy_file_writer.writerow(['final_function_call','COUNTA of final_function_call2','shanon entropy'])

final_function_calls=data2.final_function_call.values.tolist()
total_number_of_each_final_function_call=data2.COUNTA_of_final_function_call2.values.tolist()
file_sha=data1.fileShaa.values.tolist()
dictionary_of_filesha_and_function={}
unique_file_sha=len(set(file_sha))
final_function_call2=data1.final_function_call2.values.tolist()


for i in range(len(file_sha)):
  if file_sha[i] in dictionary_of_filesha_and_function.keys():
    dictionary_of_filesha_and_function[file_sha[i]].append(final_function_call2[i])
  else:
    dictionary_of_filesha_and_function[file_sha[i]]=[final_function_call2[i]]


start = time.time()
for j in range(len(final_function_calls)):
  print("j")
  function=final_function_calls[j]
  entropy=0
  for sha, function_list in dictionary_of_filesha_and_function.items():
    sha_list=[x for x in function_list if x ==function]
    total_number_of_function_x_in_sha_i=len(sha_list)
    p_filesha=total_number_of_function_x_in_sha_i/total_number_of_each_final_function_call[j]
    if p_filesha!=0:
      log_p_filesha=math.log(p_filesha,unique_file_sha)
      entropy+=p_filesha*log_p_filesha
    else:
      entropy+=0
  entropy=entropy*-1
  print("entropy is:", entropy,"\n")
  function_calls_with_shanon_anthropy_file_writer.writerow([function,total_number_of_each_final_function_call[j],entropy])
  end = time.time()
  time_elapsed=end - start
  print("process time is:",time_elapsed // 60, time_elapsed % 60)
  print("#####################################")
function_calls_with_shanon_anthropy_file.close

